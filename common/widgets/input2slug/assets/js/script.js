/**
 * Производит транслитерацию строки
 *
 * @param word string
 * @param s string
 * @param forUrl bool
 *
 * @returns string
 */
function slugization(word, s, forUrl) {
    let dictForText = {
        "Ё": "YO", "Й": "I", "Ц": "TS", "У": "U", "К": "K", "Е": "E",
        "Н": "N", "Г": "G", "Ш": "SH", "Щ": "SCH", "З": "Z", "Х": "H",
        "Ъ": "'", "ё": "yo", "й": "i", "ц": "ts", "у": "u", "к": "k",
        "е": "e", "н": "n", "г": "g", "ш": "sh", "щ": "sch", "з": "z",
        "х": "h", "ъ": "'", "Ф": "F", "Ы": "I", "В": "V", "А": "a",
        "П": "P", "Р": "R", "О": "O", "Л": "L", "Д": "D", "Ж": "ZH",
        "Э": "E", "ф": "f", "ы": "i", "в": "v", "а": "a", "п": "p",
        "р": "r", "о": "o", "л": "l", "д": "d", "ж": "zh", "э": "e",
        "Я": "Ya", "Ч": "CH", "С": "S", "М": "M", "И": "I", "Т": "T",
        "Ь": "'", "Б": "B", "Ю": "YU", "я": "ya", "ч": "ch", "с": "s",
        "м": "m", "и": "i", "т": "t", "ь": "'", "б": "b", "ю": "yu"
    };
    let dictForUrl = {
        "Ё": "YO", "Й": "I", "Ц": "TS", "У": "U", "К": "K", "Е": "E",
        "Н": "N", "Г": "G", "Ш": "SH", "Щ": "SCH", "З": "Z", "Х": "H",
        "Ъ": "", "ё": "yo", "й": "i", "ц": "ts", "у": "u", "к": "k",
        "е": "e", "н": "n", "г": "g", "ш": "sh", "щ": "sch", "з": "z",
        "х": "h", "ъ": "", "Ф": "F", "Ы": "I", "В": "V", "А": "a",
        "П": "P", "Р": "R", "О": "O", "Л": "L", "Д": "D", "Ж": "ZH",
        "Э": "E", "ф": "f", "ы": "i", "в": "v", "а": "a", "п": "p",
        "р": "r", "о": "o", "л": "l", "д": "d", "ж": "zh", "э": "e",
        "Я": "Ya", "Ч": "CH", "С": "S", "М": "M", "И": "I", "Т": "T",
        "Ь": "", "Б": "B", "Ю": "YU", "я": "ya", "ч": "ch", "с": "s",
        "м": "m", "и": "i", "т": "t", "ь": "", "б": "b", "ю": "yu",

        ' ': s, '_': s, '`': s, '~': s, '!': s, '@': s,
        '#': s, '$': s, '%': s, '^': s, '&': s, '*': s,
        '(': s, ')': s, '-': s, '\=': s, '+': s, '[': s,
        ']': s, '\\': s, '|': s, '/': s, '.': s, ',': s,
        '{': s, '}': s, '\'': s, '"': s, ';': s, ':': s,
        '?': s, '<': s, '>': s, '№': s
    };

    let dictionary = forUrl ? dictForUrl : dictForText;

    let r = new RegExp(s + '{2,}', 'g');

    return word.split('').map(function (char) {
        let isExist = typeof dictionary[char] != 'undefined';
        return isExist ? dictionary[char] : char;
    }).join("").replace(r, s);
}